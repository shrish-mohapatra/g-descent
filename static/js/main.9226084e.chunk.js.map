{"version":3,"sources":["components/Header.js","components/WindowHelper.js","components/InfoDrawer.js","components/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","getWindowDimensions","window","width","innerWidth","height","innerHeight","Title","Typography","Paragraph","Text","Link","InfoDrawer","visible","closeDrawer","onClose","closable","code","math","require","Chart","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","rawfunc","setRawfunc","setVisible","chartData","setChartData","plot_bgcolor","paper_bgcolor","font","family","margin","l","r","b","t","pad","hoverlabel","bgcolor","bordercolor","color","scene","xaxis","yaxis","zaxis","chartLayout","setChartLayout","compileFunc","message","error","comp","parse","compile","evaluate","x","y","err","generateChartData","z_data","cur_z","push","z","type","showscale","data","layout","config","responsive","addonBefore","value","onChange","e","target","onClick","icon","QuestionOutlined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9226084e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"title-div\">\r\n                <p className=\"title\">g! descent</p>\r\n                <p className=\"author\">by shrish mohapatra</p>\r\n                <Tag>W.I.P</Tag>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React from 'react'\r\nimport { Typography, Drawer, Divider } from 'antd'\r\n\r\nconst { Title, Paragraph, Text, Link } = Typography\r\n\r\nfunction InfoDrawer({visible, closeDrawer}) {\r\n    return (\r\n        <Drawer\r\n            width={450}\r\n            onClose={closeDrawer}\r\n            visible={visible}\r\n            closable={false}\r\n        >\r\n            <Typography>\r\n                <Title className=\"title-1\">about</Title>\r\n                <Paragraph>\r\n                    Gradient descent visualizer for three dimensional functions. Plotly used for 3D graphing and math.js for expression parsing.<br/>Example usage: <Text code>f(x,y)=x^2 + y^2</Text>\r\n                </Paragraph>\r\n\r\n                <Title className=\"title-2\">features</Title>\r\n                <Paragraph>\r\n                    <ul>\r\n                        <li>plot 3D functions by writing expressions</li>\r\n                        <li>\r\n                            interactive graph controls\r\n                            <li><Text code>Left-click</Text> to rotate</li>\r\n                            <li><Text code>Right-click</Text> to pan</li>\r\n                            <li><Text code>Scroll</Text> to zoom</li>\r\n                        </li>\r\n                    </ul>\r\n                </Paragraph>\r\n\r\n                <Divider/>\r\n\r\n                <Title className=\"title-2\">what is gradient descent</Title>\r\n                <Paragraph>\r\n                    Gradient descent is an optimization algorithm to find the minimum of a function. It is commonly used in neural networks.<br/><br/>Machine learning models have their performance measured by cost functions. Gradient descent is used to minimize the cost function by optimizing the weights and biases of the network. \r\n                </Paragraph>\r\n\r\n                <Title className=\"title-2\">general process</Title>\r\n                <Paragraph>\r\n                    <ol>\r\n                        <li>Start with a random position on the function</li>\r\n                        <li>Compute the gradient (partial derivative) at the given point</li>\r\n                        <li>Move in a negative direction of the gradient</li>\r\n                        <li>Repeat process until minima is reached, signified by minimal changes in position between steps</li>\r\n                    </ol>\r\n\r\n                    Note this will find local minima, not neccesarily the global.\r\n                </Paragraph>                \r\n            </Typography>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default InfoDrawer","import React, { useEffect, useState } from 'react'\r\nimport {Button, Input, message, Space} from 'antd'\r\nimport { QuestionOutlined } from '@ant-design/icons';\r\n\r\nimport Plot from 'react-plotly.js'\r\nimport useWindowDimensions from './WindowHelper'\r\nimport InfoDrawer from './InfoDrawer';\r\n\r\nconst math = require('mathjs')\r\n\r\nfunction Chart() {\r\n    const { height, width } = useWindowDimensions()\r\n    const [rawfunc, setRawfunc] = useState(\"-4x/(x^2+y^2+1)\")\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const [chartData, setChartData] = useState()\r\n    const [chartLayout, setChartLayout] = useState({\r\n        width,\r\n        height,\r\n        plot_bgcolor: \"black\",\r\n        paper_bgcolor: \"black\",\r\n        font: {\r\n            family: 'Questrial'\r\n        },\r\n        margin: {\r\n            l: 0,\r\n            r: 0,\r\n            b: 0,\r\n            t: 0,\r\n            pad: 0\r\n        },\r\n        hoverlabel: {\r\n            bgcolor: 'black',\r\n            bordercolor: 'black',\r\n            font: {\r\n                color: 'white',\r\n                family: 'Questrial'\r\n            }\r\n        },\r\n        scene: {\r\n            xaxis: { color: \"#aaa\" },\r\n            yaxis: { color: \"#aaa\" },\r\n            zaxis: { color: \"#aaa\" },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        compileFunc()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setChartLayout({\r\n            ...chartLayout,\r\n            width,\r\n            height\r\n        })\r\n    }, [height, width])\r\n\r\n    const compileFunc = () => {\r\n        if(rawfunc === \"\") return message.error('Missing function')\r\n\r\n        const node = math.parse(rawfunc)\r\n        const comp = node.compile()\r\n\r\n        let test = {x: 0, y: 0}\r\n        \r\n        try {\r\n            comp.evaluate(test)\r\n        } catch(err) {\r\n            return message.error('Could not compile function')\r\n        }\r\n\r\n        generateChartData(comp)\r\n    }\r\n\r\n    const generateChartData = (comp) => {\r\n        const start = -10\r\n        const stop = 10\r\n\r\n        let z_data = [];\r\n\r\n        for(let x=start; x<=stop; x++) {\r\n            let cur_z = []\r\n\r\n            for(let y=start; y<=stop; y++) {\r\n                cur_z.push(comp.evaluate({x,y}))\r\n            }\r\n\r\n            z_data.push(cur_z)\r\n        }\r\n        \r\n        setChartData([{\r\n            z: z_data,\r\n            type: 'surface',\r\n            showscale: false,\r\n        }])\r\n    }\r\n\r\n    // Drawer handlers\r\n    const closeDrawer = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    if(chartData) return (\r\n        <>\r\n            <Plot\r\n                data={chartData}\r\n                layout={chartLayout}\r\n                config={{responsive: true}}\r\n            />\r\n\r\n            <InfoDrawer visible={visible} closeDrawer={closeDrawer}/>\r\n\r\n            <div className=\"bot-div\">\r\n                <Space>\r\n                    <Input\r\n                        addonBefore=\"f(x,y)=\"\r\n                        value={rawfunc}\r\n                        onChange={e => setRawfunc(e.target.value)}\r\n                    />\r\n\r\n                    <Button onClick={compileFunc}>Compile</Button>\r\n                    <Button onClick={() => setVisible(true)} icon={<QuestionOutlined/>}/>\r\n                </Space>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <p></p>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import 'antd/dist/antd.dark.less'\nimport './App.less'\n\nimport Header from './components/Header'\nimport Chart from './components/Chart'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Chart/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}